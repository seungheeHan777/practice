# 개미 전사
# 개미가 부족한 식량을 충당하고자 메뚜기 식량창고를 습격한다.
# 여러 개의 창고가 일직선으로 이어져 있다.
# 각 식량창고에는 정해진 식량을 저장한다.
# 이 때, 인접한 식량창고를 약탈하면 메뚜기들이 알아챈다.
# 메뚜기들 몰래 식량창고를 약탈할 때, 얻을 수 있는 식량의 최댓값을 구하라.

# 입력 조건: 첫 줄에 n
# 둘쨰 줄에 공백으로 구분해서 각 식량창고에 저장된 식량의 수 k 입력
# 출력 조건: 첫 줄에 식량의 최댓값


# 풀이
# 왼쪽부터 순서대로 턴다고 가정할 때,
# i번째에 있는 창고를 털어야할지 결정하는 경우의 수는 2가지가 있다.
# 1. i-1번째를 털었을 경우: 이 경우에는 i번쨰와 연속적으로 이어져있어서 i를 털 수 없다.
# 2. i-2번쨰를 털경우: 이 경우에는 i번째 창고를 털 수 있다.
# 따라서 i번째를 털어야 하는지를 알고 싶다면 1번과 2번경우의 수를 비교해보면 된다.
# 이 때, 2번째에서는 i번쨰를 털 수 있으므로 i번째에 있는 식량의 수(k)까지 계산해서 비교해야한다.
# 이를 점화식으로 구해보면 a[i]=max(a[i-1],a[i-2]+k)이다.

import sys
n=int(sys.stdin.readline())
k=list(map(int,sys.stdin.readline().split()))
sum=[0]*n
for i in range(n):
    if i==0:
        sum[i]=k[i]
    elif i==1:
        sum[i]=max(k[i-1],k[i])
    else :
        sum[i]=max(sum[i-1],sum[i-2]+k[i])
print(sum[n-1])